[{"/Users/sarasalazar/Desktop/moodsic/client/src/App.js":"1","/Users/sarasalazar/Desktop/moodsic/client/src/App.test.js":"2","/Users/sarasalazar/Desktop/moodsic/client/src/components/Navigation.jsx":"3","/Users/sarasalazar/Desktop/moodsic/client/src/components/SignUp.jsx":"4","/Users/sarasalazar/Desktop/moodsic/client/src/components/SongForm.jsx":"5","/Users/sarasalazar/Desktop/moodsic/client/src/components/SongList.jsx":"6","/Users/sarasalazar/Desktop/moodsic/client/src/context/AppContext.jsx":"7","/Users/sarasalazar/Desktop/moodsic/client/src/index.js":"8","/Users/sarasalazar/Desktop/moodsic/client/src/pages/Home.jsx":"9","/Users/sarasalazar/Desktop/moodsic/client/src/pages/Profile.jsx":"10","/Users/sarasalazar/Desktop/moodsic/client/src/pages/SongStream.jsx":"11","/Users/sarasalazar/Desktop/moodsic/client/src/reportWebVitals.js":"12","/Users/sarasalazar/Desktop/moodsic/client/src/setupTests.js":"13"},{"size":696,"mtime":1607100900424,"results":"14","hashOfConfig":"15"},{"size":246,"mtime":1607028945305,"results":"16","hashOfConfig":"15"},{"size":623,"mtime":1607139915235,"results":"17","hashOfConfig":"15"},{"size":542,"mtime":1607028945307,"results":"18","hashOfConfig":"15"},{"size":2306,"mtime":1607139693868,"results":"19","hashOfConfig":"15"},{"size":1482,"mtime":1607141821285,"results":"20","hashOfConfig":"15"},{"size":451,"mtime":1607028945308,"results":"21","hashOfConfig":"15"},{"size":478,"mtime":1607099042036,"results":"22","hashOfConfig":"15"},{"size":1013,"mtime":1607139218799,"results":"23","hashOfConfig":"15"},{"size":403,"mtime":1607141266684,"results":"24","hashOfConfig":"15"},{"size":379,"mtime":1607141234651,"results":"25","hashOfConfig":"15"},{"size":362,"mtime":1607028945310,"results":"26","hashOfConfig":"15"},{"size":241,"mtime":1607028945310,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"qzsza8",{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/sarasalazar/Desktop/moodsic/client/src/App.js",[],"/Users/sarasalazar/Desktop/moodsic/client/src/App.test.js",[],"/Users/sarasalazar/Desktop/moodsic/client/src/components/Navigation.jsx",[],"/Users/sarasalazar/Desktop/moodsic/client/src/components/SignUp.jsx",[],"/Users/sarasalazar/Desktop/moodsic/client/src/components/SongForm.jsx",["56"],"import React, { useState, useContext } from \"react\";\nimport { AppContext } from \"../context/AppContext.jsx\";\nimport { Container, Form, Button } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport swal from \"sweetalert\";\nimport \"../App.css\";\n\nconst SongForm = () => {\n  const { setSongs } = useContext(AppContext);\n  const [formData, setFormData] = useState(null);\n\n  const handleChange = (e) => {\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n  };\n\n  const submitForm = async (e) => {\n    const form = e.target;\n    e.preventDefault();\n    try {\n      await axios({\n        method: \"POST\",\n        url: \"/api/songs\",\n        data: formData,\n      });\n      swal(\"New song added to Moodsic!\");\n      form.reset();\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return (\n    <Container className=\"form-container\">\n      <Form\n        onSubmit={submitForm}\n        border=\"primary\"\n        style={{\n          width: \"25rem\",\n          height: \"55%\",\n          border: \"1px solid white\",\n          padding: \"2rem\",\n        }}\n      >\n        <Form.Group>\n          <Form.Label>Title</Form.Label>\n          <Form.Control\n            type=\"text\"\n            name=\"title\"\n            placeholder=\"Song Title\"\n            onChange={handleChange}\n            required\n          />\n        </Form.Group>\n        <Form.Group>\n          <Form.Label>Artist</Form.Label>\n          <Form.Control\n            type=\"text\"\n            name=\"artist\"\n            placeholder=\"Artist\"\n            onChange={handleChange}\n            required\n          />\n        </Form.Group>\n        <Form.Group>\n          <Form.Label>Runtime</Form.Label>\n          <Form.Control\n            type=\"number\"\n            name=\"runtime\"\n            placeholder=\"Runtime\"\n            onChange={handleChange}\n          />\n        </Form.Group>\n        <Form.Group>\n          <Form.Label>Youtube Link</Form.Label>\n          <Form.Control\n            type=\"url\"\n            name=\"youtubeUrl\"\n            placeholder=\"https://www.youtube.com/\"\n            onChange={handleChange}\n          />\n        </Form.Group>\n        <Form.Group className=\"d-flex justify-content-center\">\n          <Button type=\"submit\">Submit</Button>\n        </Form.Group>\n      </Form>\n    </Container>\n  );\n};\n\nexport default SongForm;\n","/Users/sarasalazar/Desktop/moodsic/client/src/components/SongList.jsx",["57"],"import React, { useEffect, useContext } from \"react\";\nimport axios from \"axios\";\nimport { AppContext } from \"../context/AppContext\";\nimport { Card } from \"react-bootstrap\";\nimport \"../App.css\";\n\nconst SongList = () => {\n  const { songs, setSongs } = useContext(AppContext);\n  useEffect(() => {\n    axios\n      .get(\"/api/songs\")\n      .then((response) => setSongs(response.data))\n      .catch((err) => console.log(err));\n  }, [setSongs]);\n\n  return (\n    <div\n      className=\"music_container\"\n      style={{\n        display: \"flex\",\n        justifyContent: \"center\",\n        flexWrap: \"wrap\",\n        gap: \"10px\",\n      }}\n    >\n      {songs.map((song) => {\n        return (\n          <Card\n            className=\"d-flex align-items-center\"\n            style={{ width: \"30rem\", background: \"rgba(255, 255, 255, 0.2)\" }}\n          >\n            <Card.Body>\n              <Card.Title>{song.title}</Card.Title>\n              <Card.Text>{song.artist}</Card.Text>\n              <iframe\n                width=\"460\"\n                height=\"270\"\n                src={song.youtubeUrl}\n                frameborder=\"0\"\n                allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n                allowFullScreen=\"true\"\n                webkitallowfullscreen=\"true\"\n                mozallowfullscreen=\"true\"\n              ></iframe>\n            </Card.Body>\n          </Card>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default SongList;\n","/Users/sarasalazar/Desktop/moodsic/client/src/context/AppContext.jsx",[],"/Users/sarasalazar/Desktop/moodsic/client/src/index.js",[],"/Users/sarasalazar/Desktop/moodsic/client/src/pages/Home.jsx",[],"/Users/sarasalazar/Desktop/moodsic/client/src/pages/Profile.jsx",[],"/Users/sarasalazar/Desktop/moodsic/client/src/pages/SongStream.jsx",[],"/Users/sarasalazar/Desktop/moodsic/client/src/reportWebVitals.js",[],"/Users/sarasalazar/Desktop/moodsic/client/src/setupTests.js",[],{"ruleId":"58","severity":1,"message":"59","line":9,"column":11,"nodeType":"60","messageId":"61","endLine":9,"endColumn":19},{"ruleId":"62","severity":1,"message":"63","line":35,"column":15,"nodeType":"64","endLine":44,"endColumn":16},"no-unused-vars","'setSongs' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","JSXOpeningElement"]